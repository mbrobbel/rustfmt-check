{"version":3,"file":"index.js","sources":["../src/main.ts"],"sourcesContent":["import * as core from '@actions/core'\nimport * as github from '@actions/github'\nimport check from './check'\nimport rustfmt from './rustfmt'\nimport stringArgv from 'string-argv'\nimport { normalize } from 'path'\nimport { promisify } from 'util'\nimport { readFile as readFileCallback } from 'fs'\n\nconst readFile = promisify(readFileCallback)\n\nasync function run(): Promise<void> {\n  try {\n    const token = core.getInput('token', { required: true })\n    const octokit = github.getOctokit(token)\n    const context = github.context\n    const mode = core.getInput('mode')\n    const rustfmt_args = stringArgv(core.getInput('rustfmt-args'))\n    const message = core.getInput('commit-message')\n\n    switch (mode) {\n      case 'commit':\n        {\n          const head =\n            context.eventName === 'pull_request' && context.payload.pull_request\n              ? {\n                  sha: context.payload.pull_request.head.sha,\n                  ref: `refs/heads/${context.payload.pull_request.head.ref}`\n                }\n              : { sha: context.sha, ref: context.ref }\n\n          await rustfmt(['-l'].concat(rustfmt_args)).then(async (paths) =>\n            paths.length === 0\n              ? // No formatting required\n                Promise.resolve()\n              : octokit.rest.git\n                  .createTree({\n                    ...context.repo,\n                    tree: await Promise.all(\n                      paths.map(async (path) => ({\n                        path: normalize(\n                          path.replace(`${process.env.GITHUB_WORKSPACE}/`, '')\n                        ),\n                        mode: '100644',\n                        type: 'blob',\n                        content: await readFile(path, 'utf8')\n                      }))\n                    ),\n                    base_tree: head.sha\n                  })\n                  .then(async ({ data: { sha } }) =>\n                    octokit.rest.git.createCommit({\n                      ...context.repo,\n                      message,\n                      tree: sha,\n                      parents: [head.sha]\n                    })\n                  )\n                  .then(async ({ data: { sha } }) =>\n                    octokit.rest.git.updateRef({\n                      ...context.repo,\n                      ref: head.ref.replace('refs/', ''),\n                      sha\n                    })\n                  )\n          )\n        }\n        break\n      case 'review':\n        {\n          if (!context.payload.pull_request) {\n            throw new Error('Review mode requires a pull_request event trigger')\n          }\n          // Dismiss exisiting (open) reviews\n          const reviews = await octokit.rest.pulls.listReviews({\n            ...context.repo,\n            pull_number: context.issue.number\n          })\n          const review_id = reviews.data\n            .reverse()\n            .find(\n              ({ user, state }) =>\n                user?.id === 41898282 && state === 'CHANGES_REQUESTED'\n            )?.id\n          if (review_id !== undefined) {\n            core.debug(`Removing review: ${review_id}.`)\n            // Delete outdated comments\n            const review_comments =\n              await octokit.rest.pulls.listCommentsForReview({\n                ...context.repo,\n                pull_number: context.issue.number,\n                review_id\n              })\n            await Promise.all(\n              review_comments.data.map(({ id }) => {\n                core.debug(`Removing review comment: ${id}.`)\n                octokit.rest.pulls.deleteReviewComment({\n                  ...context.repo,\n                  comment_id: id\n                })\n              })\n            )\n            // Dismiss review\n            core.debug(`Dismiss review: ${review_id}.`)\n            await octokit.rest.pulls.dismissReview({\n              ...context.repo,\n              pull_number: context.issue.number,\n              review_id,\n              message: 'Removing outdated review.'\n            })\n          } else {\n            core.debug(`No existing reviews found.`)\n          }\n          // Check current state\n          const output = await check()\n          if (output.length === 0) {\n            // Approve\n            core.debug('Approve review')\n            await octokit.rest.pulls.createReview({\n              ...context.repo,\n              pull_number: context.issue.number,\n              event: 'APPROVE'\n            })\n            Promise.resolve()\n          } else {\n            // Request changes\n            core.debug('Request changes')\n            await octokit.rest.pulls.createReview({\n              ...context.repo,\n              pull_number: context.issue.number,\n              body: `Please format your code using [rustfmt](https://github.com/rust-lang/rustfmt): \\`cargo fmt\\``,\n              event: 'REQUEST_CHANGES',\n              comments: output.map((result) => ({\n                path: result.path.replace(\n                  `${process.env.GITHUB_WORKSPACE}/`,\n                  ''\n                ),\n                body: `\\`\\`\\`suggestion\n${result.mismatch.expected}\\`\\`\\``,\n                start_line:\n                  result.mismatch.original_end_line ===\n                  result.mismatch.original_begin_line\n                    ? undefined\n                    : result.mismatch.original_begin_line,\n                line:\n                  result.mismatch.original_end_line ===\n                  result.mismatch.original_begin_line\n                    ? result.mismatch.original_begin_line\n                    : result.mismatch.original_end_line,\n                side: 'RIGHT'\n              }))\n            })\n          }\n        }\n        break\n      case 'pull':\n        // Open a pull request from a new branch with the formatted code\n        {\n          const head =\n            context.eventName === 'pull_request' && context.payload.pull_request\n              ? {\n                  sha: context.payload.pull_request.head.sha,\n                  ref: `refs/heads/${context.payload.pull_request.head.ref}`\n                }\n              : { sha: context.sha, ref: context.ref }\n          const ref = `refs/heads/rustfmt-${head.sha}`\n          await rustfmt(['-l'].concat(rustfmt_args)).then(async (paths) =>\n            paths.length === 0\n              ? // No formatting required\n                Promise.resolve()\n              : octokit.rest.git\n                  .createRef({\n                    ...context.repo,\n                    ref,\n                    sha: head.sha\n                  })\n                  .then(async () =>\n                    octokit.rest.git\n                      .createTree({\n                        ...context.repo,\n                        tree: await Promise.all(\n                          paths.map(async (path) => ({\n                            path: normalize(\n                              path.replace(\n                                `${process.env.GITHUB_WORKSPACE}/`,\n                                ''\n                              )\n                            ),\n                            mode: '100644',\n                            type: 'blob',\n                            content: await readFile(path, 'utf8')\n                          }))\n                        ),\n                        base_tree: head.sha\n                      })\n                      .then(async ({ data: { sha } }) =>\n                        octokit.rest.git.createCommit({\n                          ...context.repo,\n                          message,\n                          tree: sha,\n                          parents: [head.sha]\n                        })\n                      )\n                      .then(async ({ data: { sha } }) =>\n                        octokit.rest.git.updateRef({\n                          ...context.repo,\n                          ref: ref.replace('refs/', ''),\n                          sha\n                        })\n                      )\n                      .then(async () => {\n                        const title = `Format code using rustfmt for ${head.sha}`\n                        const body = `The code for commit \\`${head.sha}\\` on \\`${head.ref.replace('refs/heads/', '')}\\` has been formatted automatically using [rustfmt](https://github.com/rust-lang/rustfmt).\nPlease review the changes and merge if everything looks good.\n\n---\n\nDelete the \\`${ref.replace('refs/heads/', '')}\\` branch after merging or closing the pull request.`\n                        return octokit.rest.pulls.create({\n                          ...context.repo,\n                          title,\n                          head: ref.replace('refs/heads/', ''),\n                          base: head.ref.replace('refs/heads/', ''),\n                          body\n                        })\n                      })\n                  )\n          )\n        }\n        break\n      default:\n        throw new Error(`Unsupported mode: ${mode}`)\n    }\n  } catch (error) {\n    const message = error instanceof Error ? error.message : String(error)\n    core.setFailed(message)\n  }\n}\n\nrun()\n"],"names":[],"mappings":"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"}